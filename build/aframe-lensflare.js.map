{"version":3,"file":"aframe-lensflare.js","sources":["../node_modules/three/examples/jsm/objects/Lensflare.js","../src/aframe-lensflare.js"],"sourcesContent":["import {\n\tAdditiveBlending,\n\tBox2,\n\tBufferGeometry,\n\tColor,\n\tFramebufferTexture,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tMesh,\n\tMeshBasicMaterial,\n\tRawShaderMaterial,\n\tVector2,\n\tVector3,\n\tVector4,\n\tRGBAFormat\n} from 'three';\n\nclass Lensflare extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper( Lensflare.Geometry, new MeshBasicMaterial( { opacity: 0, transparent: true } ) );\n\n\t\tthis.type = 'Lensflare';\n\t\tthis.frustumCulled = false;\n\t\tthis.renderOrder = Infinity;\n\n\t\t//\n\n\t\tconst positionScreen = new Vector3();\n\t\tconst positionView = new Vector3();\n\n\t\t// textures\n\n\t\tconst tempMap = new FramebufferTexture( 16, 16, RGBAFormat );\n\t\tconst occlusionMap = new FramebufferTexture( 16, 16, RGBAFormat );\n\n\t\t// material\n\n\t\tconst geometry = Lensflare.Geometry;\n\n\t\tconst material1a = new RawShaderMaterial( {\n\t\t\tuniforms: {\n\t\t\t\t'scale': { value: null },\n\t\t\t\t'screenPosition': { value: null }\n\t\t\t},\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform vec3 screenPosition;\n\t\t\t\tuniform vec2 scale;\n\n\t\t\t\tattribute vec3 position;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );\n\n\t\t\t\t}`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );\n\n\t\t\t\t}`,\n\t\t\tdepthTest: true,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: false\n\t\t} );\n\n\t\tconst material1b = new RawShaderMaterial( {\n\t\t\tuniforms: {\n\t\t\t\t'map': { value: tempMap },\n\t\t\t\t'scale': { value: null },\n\t\t\t\t'screenPosition': { value: null }\n\t\t\t},\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform vec3 screenPosition;\n\t\t\t\tuniform vec2 scale;\n\n\t\t\t\tattribute vec3 position;\n\t\t\t\tattribute vec2 uv;\n\n\t\t\t\tvarying vec2 vUV;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUV = uv;\n\n\t\t\t\t\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );\n\n\t\t\t\t}`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform sampler2D map;\n\n\t\t\t\tvarying vec2 vUV;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = texture2D( map, vUV );\n\n\t\t\t\t}`,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: false\n\t\t} );\n\n\t\t// the following object is used for occlusionMap generation\n\n\t\tconst mesh1 = new Mesh( geometry, material1a );\n\n\t\t//\n\n\t\tconst elements = [];\n\n\t\tconst shader = LensflareElement.Shader;\n\n\t\tconst material2 = new RawShaderMaterial( {\n\t\t\tuniforms: {\n\t\t\t\t'map': { value: null },\n\t\t\t\t'occlusionMap': { value: occlusionMap },\n\t\t\t\t'color': { value: new Color( 0xffffff ) },\n\t\t\t\t'scale': { value: new Vector2() },\n\t\t\t\t'screenPosition': { value: new Vector3() }\n\t\t\t},\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tblending: AdditiveBlending,\n\t\t\ttransparent: true,\n\t\t\tdepthWrite: false\n\t\t} );\n\n\t\tconst mesh2 = new Mesh( geometry, material2 );\n\n\t\tthis.addElement = function ( element ) {\n\n\t\t\telements.push( element );\n\n\t\t};\n\n\t\t//\n\n\t\tconst scale = new Vector2();\n\t\tconst screenPositionPixels = new Vector2();\n\t\tconst validArea = new Box2();\n\t\tconst viewport = new Vector4();\n\n\t\tthis.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\trenderer.getCurrentViewport( viewport );\n\n\t\t\tconst invAspect = viewport.w / viewport.z;\n\t\t\tconst halfViewportWidth = viewport.z / 2.0;\n\t\t\tconst halfViewportHeight = viewport.w / 2.0;\n\n\t\t\tlet size = 16 / viewport.w;\n\t\t\tscale.set( size * invAspect, size );\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\t// calculate position in screen space\n\n\t\t\tpositionView.setFromMatrixPosition( this.matrixWorld );\n\t\t\tpositionView.applyMatrix4( camera.matrixWorldInverse );\n\n\t\t\tif ( positionView.z > 0 ) return; // lensflare is behind the camera\n\n\t\t\tpositionScreen.copy( positionView ).applyMatrix4( camera.projectionMatrix );\n\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\tscreenPositionPixels.x = viewport.x + ( positionScreen.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\tscreenPositionPixels.y = viewport.y + ( positionScreen.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t// screen cull\n\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) ) {\n\n\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\trenderer.copyFramebufferToTexture( screenPositionPixels, tempMap );\n\n\t\t\t\t// render pink quad\n\n\t\t\t\tlet uniforms = material1a.uniforms;\n\t\t\t\tuniforms[ 'scale' ].value = scale;\n\t\t\t\tuniforms[ 'screenPosition' ].value = positionScreen;\n\n\t\t\t\trenderer.renderBufferDirect( camera, null, geometry, material1a, mesh1, null );\n\n\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\trenderer.copyFramebufferToTexture( screenPositionPixels, occlusionMap );\n\n\t\t\t\t// restore graphics\n\n\t\t\t\tuniforms = material1b.uniforms;\n\t\t\t\tuniforms[ 'scale' ].value = scale;\n\t\t\t\tuniforms[ 'screenPosition' ].value = positionScreen;\n\n\t\t\t\trenderer.renderBufferDirect( camera, null, geometry, material1b, mesh1, null );\n\n\t\t\t\t// render elements\n\n\t\t\t\tconst vecX = - positionScreen.x * 2;\n\t\t\t\tconst vecY = - positionScreen.y * 2;\n\n\t\t\t\tfor ( let i = 0, l = elements.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst element = elements[ i ];\n\n\t\t\t\t\tconst uniforms = material2.uniforms;\n\n\t\t\t\t\tuniforms[ 'color' ].value.copy( element.color );\n\t\t\t\t\tuniforms[ 'map' ].value = element.texture;\n\t\t\t\t\tuniforms[ 'screenPosition' ].value.x = positionScreen.x + vecX * element.distance;\n\t\t\t\t\tuniforms[ 'screenPosition' ].value.y = positionScreen.y + vecY * element.distance;\n\n\t\t\t\t\tsize = element.size / viewport.w;\n\t\t\t\t\tconst invAspect = viewport.w / viewport.z;\n\n\t\t\t\t\tuniforms[ 'scale' ].value.set( size * invAspect, size );\n\n\t\t\t\t\tmaterial2.uniformsNeedUpdate = true;\n\n\t\t\t\t\trenderer.renderBufferDirect( camera, null, geometry, material2, mesh2, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tmaterial1a.dispose();\n\t\t\tmaterial1b.dispose();\n\t\t\tmaterial2.dispose();\n\n\t\t\ttempMap.dispose();\n\t\t\tocclusionMap.dispose();\n\n\t\t\tfor ( let i = 0, l = elements.length; i < l; i ++ ) {\n\n\t\t\t\telements[ i ].texture.dispose();\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n}\n\nLensflare.prototype.isLensflare = true;\n\n//\n\nclass LensflareElement {\n\n\tconstructor( texture, size = 1, distance = 0, color = new Color( 0xffffff ) ) {\n\n\t\tthis.texture = texture;\n\t\tthis.size = size;\n\t\tthis.distance = distance;\n\t\tthis.color = color;\n\n\t}\n\n}\n\nLensflareElement.Shader = {\n\n\tuniforms: {\n\n\t\t'map': { value: null },\n\t\t'occlusionMap': { value: null },\n\t\t'color': { value: null },\n\t\t'scale': { value: null },\n\t\t'screenPosition': { value: null }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tprecision highp float;\n\n\t\tuniform vec3 screenPosition;\n\t\tuniform vec2 scale;\n\n\t\tuniform sampler2D occlusionMap;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\n\t\tvarying vec2 vUV;\n\t\tvarying float vVisibility;\n\n\t\tvoid main() {\n\n\t\t\tvUV = uv;\n\n\t\t\tvec2 pos = position.xy;\n\n\t\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\n\n\t\t\tvVisibility =        visibility.r / 9.0;\n\t\t\tvVisibility *= 1.0 - visibility.g / 9.0;\n\t\t\tvVisibility *=       visibility.b / 9.0;\n\n\t\t\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tprecision highp float;\n\n\t\tuniform sampler2D map;\n\t\tuniform vec3 color;\n\n\t\tvarying vec2 vUV;\n\t\tvarying float vVisibility;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texture = texture2D( map, vUV );\n\t\t\ttexture.a *= vVisibility;\n\t\t\tgl_FragColor = texture;\n\t\t\tgl_FragColor.rgb *= color;\n\n\t\t}`\n\n};\n\nLensflare.Geometry = ( function () {\n\n\tconst geometry = new BufferGeometry();\n\n\tconst float32Array = new Float32Array( [\n\t\t- 1, - 1, 0, 0, 0,\n\t\t1, - 1, 0, 1, 0,\n\t\t1, 1, 0, 1, 1,\n\t\t- 1, 1, 0, 0, 1\n\t] );\n\n\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\tgeometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\tgeometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\treturn geometry;\n\n} )();\n\nexport { Lensflare, LensflareElement };\n","/* jshint esversion: 9 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME */\n\nimport { LensflareElement, Lensflare } from 'three/examples/jsm/objects/Lensflare.js';\n\n\nAFRAME.registerComponent('lens-flare', {\n\tschema: {},\n\tinit() {\n\t\tthis.lensFlare = new Lensflare();\n\t\tthis.el.setObject3D('lensflare', this.lensFlare);\n\t},\n\tremove() {\n\t\tthis.el.removeObject3D('lensflare', this.lensFlare);\n\t}\n});\n\ndocumentation:\nconsole.log(`Configure each part of the lens flare`);\nAFRAME.registerComponent('lens-flare-element', {\n\tschema: {\n\t\ttexture: {\n\t\t\tdescription: 'Texture of the lensflare',\n\t\t\tdefault: 'https://threejs.org/examples/textures/lensflare/lensflare0.png',\n\t\t\ttype: 'map'\n\t\t},\n\t\tsize: {\n\t\t\tdescription: 'Size in pixels of the lensflare',\n\t\t\ttype: 'map'\n\t\t},\n\t\tdistance: {\n\t\t\tdescription: 'Distance from the light 0-1',\n\t\t\tdefault: 0\n\t\t},\n\t\tcolor: {\n\t\t\tdescription: 'Override color of the lensflare',\n\t\t\ttype: 'color',\n\t\t\tdefault: 'white'\n\t\t},\n\t},\n\tinit () {\n\t\tthis.lensFlare = new LensflareElement();\n\t\tconst parent = this.el.components['lens-flare'] || this.el.parentNode.components['lens-flare'];\n\t\tparent.lensFlare.addElement(this.lensFlare);\n\t},\n\tupdate(oldData={}) {\n\t\tfor (const prop of ['texture', 'size', 'distance', 'color']) {\n\t\t\tconst value = this.data[prop];\n\t\t\tif (oldData[prop] !== value) {\n\t\t\t\tif (prop === 'texture') {\n\t\t\t\t\tthis.el.sceneEl.systems.material.loadTexture(value, { src: value }, texture => {\n\t\t\t\t\t\tthis.lensFlare.texture = texture;\n\t\t\t\t\t\tAFRAME.utils.material.handleTextureEvents(this.el, texture);\n\t\t\t\t\t});\n\t\t\t\t} else if (prop === 'color') {\n\t\t\t\t\tthis.lensFlare.color.set(value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.lensFlare[prop] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tremove() {\n\t\tthis.el.removeObject3D('lensflare');\n\t}\n});\n"],"names":["Mesh","MeshBasicMaterial","Vector3","FramebufferTexture","RGBAFormat","RawShaderMaterial","Color","Vector2","AdditiveBlending","Box2","Vector4","BufferGeometry","InterleavedBuffer","InterleavedBufferAttribute"],"mappings":"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"}